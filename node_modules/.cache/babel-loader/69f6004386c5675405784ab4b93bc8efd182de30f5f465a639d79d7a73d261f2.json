{"ast":null,"code":"var _jsxFileName = \"/Users/daphnewu/Desktop/Projects/portfolio/src/components/Hero.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroSection = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black text-white min-h-screen flex flex-col justify-start items-start relative mt-[1cm] md:mt-8 lg:mt-16 ml-4 sm:ml-6 lg:ml-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-6xl font-bold leading-none font-sono\",\n        children: \"hey there!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-6xl font-bold leading-none font-sono\",\n        children: \"i\\u2019m daphne.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-left max-w-lg mt-6 flex flex-col items-start space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg sm:text-xl text-white font-mono font-bold\",\n        children: \"I aspire to craft experiences that inspire and resonate at the crossroads of art, design, technology, and AI.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-6 py-3 border border-white text-white rounded-full hover:bg-white hover:text-black transition\",\n        children: \"\\u2192 say hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = HeroSection;\nexport default HeroSection;\n\n// import React, { useEffect, useState } from \"react\";\n// import MyImage from \"./assets/images/saillogo.png\"; // Adjust the path based on where the image is located\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faChevronDown } from '@fortawesome/free-solid-svg-icons'; // Downward arrow icon\n\n// const Hero = () => {\n//   const imageWidth = 700;\n//   const [position, setPosition] = useState(-imageWidth); // Start off-screen to the left\n\n//   useEffect(() => {\n//     let animationFrameId;\n\n//     // Function to animate the image across the screen\n//     const animate = () => {\n//       setPosition((prev) =>\n//         prev >= window.innerWidth ? -imageWidth : prev + 2 // Reset to the left after leaving the screen\n//       );\n//       animationFrameId = requestAnimationFrame(animate);\n//     };\n\n//     // Start animation\n//     animate();\n\n//     // Cleanup on component unmount\n//     return () => cancelAnimationFrame(animationFrameId);\n//   }, []);\n\n//   // Bobbing effect based on position\n//   const bobPosition = Math.sin(position * 0.05) * 20; // Vertical bobbing\n\n//   return (\n//     <div className=\"hero text-[#090704] p-0 m-0 h-screen w-full text-center flex flex-col justify-center items-center bg-[#f7f7f7] overflow-hidden relative\">\n//       {/* Title */}\n//       <h1 className=\"text-6xl font-bold text-[#090704] mt-12 mb-16 tracking-wide\">\n//         DAPHNE WU\n//       </h1>\n\n//       {/* Image moving across the screen */}\n//       <img\n//         src={MyImage}\n//         alt=\"Sail Logo\"\n//         style={{\n//           transform: `translateX(${position}px) translateY(${bobPosition}px)`, // Move horizontally and vertically\n//           position: \"absolute\", // Ensure it's positioned absolutely within the screen\n//         }}\n//         className=\"w-[700px] h-auto\"\n//       />\n\n//       {/* Down arrow */}\n//       <div className=\"down-arrow mt-64 style={{ position: 'absolute', bottom: '5px' }\">\n//         <FontAwesomeIcon icon={faChevronDown} size=\"3x\" color=\"#090704\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Hero;\n\n//moving animation hero\n// import React, { useEffect, useState } from \"react\";\n// import MyImage from \"./assets/images/saillogo.png\"; // Your sailboat image\n// import ArrowImage from \"./assets/images/arrow.png\"; // Arrow image for desktop\n// import DragImage from \"./assets/images/drag.png\"; // Drag icon for mobile\n\n// const Hero = () => {\n//   const [position, setPosition] = useState({ x: 0, y: 300 });\n//   const [touchStart, setTouchStart] = useState({ x: 0, y: 0 });\n//   const [isMobile, setIsMobile] = useState(false); // Track if the device is mobile\n//   const [isMoving, setIsMoving] = useState(false); // Track if the image is moving\n\n//   // Check if the device is mobile\n//   useEffect(() => {\n//     const checkMobile = () => {\n//       setIsMobile(window.innerWidth <= 768); // You can adjust the breakpoint based on your needs\n//     };\n\n//     // Check on load\n//     checkMobile();\n\n//     // Add resize listener to detect device switch\n//     window.addEventListener(\"resize\", checkMobile);\n\n//     return () => window.removeEventListener(\"resize\", checkMobile); // Cleanup on unmount\n//   }, []);\n\n//   // Handle keydown events for arrow keys (Desktop)\n//   const handleKeyDown = (event) => {\n//     const step = 10; // Distance moved per key press\n//     let newPosition = { ...position };\n\n//     switch (event.key) {\n//       case \"ArrowUp\":\n//         newPosition.y -= step;\n//         break;\n//       case \"ArrowDown\":\n//         newPosition.y += step;\n//         break;\n//       case \"ArrowLeft\":\n//         newPosition.x -= step;\n//         break;\n//       case \"ArrowRight\":\n//         newPosition.x += step;\n//         break;\n//       default:\n//         break;\n//     }\n\n//     setPosition(newPosition);\n//     setIsMoving(true); // Mark as moving when key is pressed\n//   };\n\n//   // Handle touch events for mobile (swiping)\n//   const handleTouchStart = (e) => {\n//     const touchStartX = e.touches[0].clientX;\n//     const touchStartY = e.touches[0].clientY;\n//     setTouchStart({ x: touchStartX, y: touchStartY });\n//   };\n\n//   const handleTouchMove = (e) => {\n//     if (!touchStart.x || !touchStart.y) return; // Ignore if no touch start position\n\n//     const touchEndX = e.touches[0].clientX;\n//     const touchEndY = e.touches[0].clientY;\n\n//     const deltaX = touchEndX - touchStart.x;\n//     const deltaY = touchEndY - touchStart.y;\n\n//     let newPosition = { ...position };\n\n//     // Move the boat based on the touch swipe distance\n//     newPosition.x += deltaX / 10; // Divide by a factor to control the speed of movement\n//     newPosition.y += deltaY / 10;\n\n//     setPosition(newPosition);\n//     setTouchStart({ x: touchEndX, y: touchEndY }); // Update touch start for next movement\n//     setIsMoving(true); // Mark as moving when touch is moved\n//   };\n\n//   const handleTouchEnd = () => {\n//     setTouchStart({ x: 0, y: 0 }); // Reset touch position when touch ends\n//   };\n\n//   // Attach and clean up keydown event listener\n//   useEffect(() => {\n//     window.addEventListener(\"keydown\", handleKeyDown);\n\n//     // Cleanup when component unmounts\n//     return () => {\n//       window.removeEventListener(\"keydown\", handleKeyDown);\n//     };\n//   }, [position]); // Only re-run when position changes\n\n//   // Attach and clean up touch event listeners for mobile\n//   useEffect(() => {\n//     window.addEventListener(\"touchstart\", handleTouchStart);\n//     window.addEventListener(\"touchmove\", handleTouchMove);\n//     window.addEventListener(\"touchend\", handleTouchEnd);\n\n//     // Cleanup when component unmounts\n//     return () => {\n//       window.removeEventListener(\"touchstart\", handleTouchStart);\n//       window.removeEventListener(\"touchmove\", handleTouchMove);\n//       window.removeEventListener(\"touchend\", handleTouchEnd);\n//     };\n//   }, [position, touchStart]);\n\n//   return (\n//     <div className=\"hero text-[#090704] p-0 m-0 h-screen w-full text-center flex flex-col justify-center items-center bg-[#f7f7f7] relative\">\n//       {/* Title */}\n//       <h1 className=\"text-7xl font-bold text-[#090704] mt-12 mb-16 tracking-wide z-20\">\n//         DAPHNE WU\n//       </h1>\n\n//       {/* Instruction Message for Mobile */}\n//       <p\n//         className=\"instruction-message text-[#090704] font-medium text-lg z-20\"\n//         style={{\n//           position: \"absolute\",\n//           top: \"50%\", // Position it near the center of the screen\n//           left: \"50%\",\n//           transform: \"translate(-50%, -50%)\",\n//           padding: \"10px\",\n//           backgroundColor: \"#f7f7f7\",\n//           borderRadius: \"5px\",\n//           visibility: (isMobile && !isMoving) ? \"visible\" : \"hidden\", // Show only on mobile and if not moving\n//         }}\n//       >\n//         Drag the sailboat to move it\n//       </p>\n\n//       {/* Instruction Message for Desktop */}\n//       <p\n//         className=\"instruction-message text-[#090704] font-medium text-lg z-20\"\n//         style={{\n//           position: \"absolute\",\n//           top: \"50%\",\n//           left: \"50%\",\n//           transform: \"translate(-50%, 40%)\",\n//           padding: \"10px\",\n//           backgroundColor: \"#f7f7f7\",\n//           borderRadius: \"5px\",\n//           visibility: (!isMobile && !isMoving) ? \"visible\" : \"hidden\", // Show only on desktop and if not moving\n//         }}\n//       >\n//         Use the arrow keys to move the sailboat\n//       </p>\n\n//       {/* Sailboat Image */}\n//       <img\n//         src={MyImage}\n//         alt=\"Sailboat\"\n//         style={{\n//           position: \"absolute\",\n//           left: `${position.x}px`,\n//           top: `${position.y}px`,\n//           width: \"200px\",\n//           height: \"auto\",\n//           zIndex: 10,\n//         }}\n//       />\n\n//       {/* Arrow or Drag Image */}\n//       <img\n//         src={isMobile ? DragImage : ArrowImage} // Show drag icon for mobile, arrow for desktop\n//         alt=\"Move icon\"\n//         style={{\n//           position: \"absolute\",\n//           left: `${position.x + 220}px`, // Position next to the sailboat\n//           top: `${position.y + 50}px`, // Position vertically aligned with the sailboat\n//           width: \"50px\", // Size of the move icon\n//           height: \"auto\",\n//           zIndex: 20,\n//           visibility: isMoving ? \"hidden\" : \"visible\", // Hide when the image starts moving\n//         }}\n//       />\n\n//       {/* Optional: Down Arrow */}\n//       <div\n//         className=\"down-arrow\"\n//         style={{\n//           position: \"absolute\",\n//           bottom: \"10px\",\n//           left: \"50%\",\n//           transform: \"translateX(-50%)\",\n//           color: \"#090704\", // Customize the arrow color\n//           fontSize: \"2rem\", // Adjust the size of the arrow\n//         }}\n//       >\n//         ↓\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Hero;\nvar _c;\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HeroSection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daphnewu/Desktop/Projects/portfolio/src/components/Hero.jsx"],"sourcesContent":["import React from \"react\";\n\nconst HeroSection = () => {\n  return (\n    <div \n      className=\"bg-black text-white min-h-screen flex flex-col justify-start items-start relative mt-[1cm] md:mt-8 lg:mt-16 ml-4 sm:ml-6 lg:ml-8\"\n    >\n      {/* Stacked Text */}\n      <div className=\"space-y-2 text-left\">\n        <h1 className=\"text-6xl font-bold leading-none font-sono\">\n          hey there!\n        </h1>\n        <h1 className=\"text-6xl font-bold leading-none font-sono\">\n          i’m daphne.\n        </h1>\n      </div>\n\n      {/* Intro Text and Button */}\n      <div className=\"text-left max-w-lg mt-6 flex flex-col items-start space-y-6\">\n        <p className=\"text-lg sm:text-xl text-white font-mono font-bold\">\n          I aspire to craft experiences that inspire and resonate at the crossroads of art, design, technology, and AI.\n        </p>\n        {/* Button */}\n        <button className=\"px-6 py-3 border border-white text-white rounded-full hover:bg-white hover:text-black transition\">\n          → say hi\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroSection;\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import MyImage from \"./assets/images/saillogo.png\"; // Adjust the path based on where the image is located\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faChevronDown } from '@fortawesome/free-solid-svg-icons'; // Downward arrow icon\n\n// const Hero = () => {\n//   const imageWidth = 700;\n//   const [position, setPosition] = useState(-imageWidth); // Start off-screen to the left\n\n//   useEffect(() => {\n//     let animationFrameId;\n\n//     // Function to animate the image across the screen\n//     const animate = () => {\n//       setPosition((prev) =>\n//         prev >= window.innerWidth ? -imageWidth : prev + 2 // Reset to the left after leaving the screen\n//       );\n//       animationFrameId = requestAnimationFrame(animate);\n//     };\n\n//     // Start animation\n//     animate();\n\n//     // Cleanup on component unmount\n//     return () => cancelAnimationFrame(animationFrameId);\n//   }, []);\n\n//   // Bobbing effect based on position\n//   const bobPosition = Math.sin(position * 0.05) * 20; // Vertical bobbing\n\n//   return (\n//     <div className=\"hero text-[#090704] p-0 m-0 h-screen w-full text-center flex flex-col justify-center items-center bg-[#f7f7f7] overflow-hidden relative\">\n//       {/* Title */}\n//       <h1 className=\"text-6xl font-bold text-[#090704] mt-12 mb-16 tracking-wide\">\n//         DAPHNE WU\n//       </h1>\n\n//       {/* Image moving across the screen */}\n//       <img\n//         src={MyImage}\n//         alt=\"Sail Logo\"\n//         style={{\n//           transform: `translateX(${position}px) translateY(${bobPosition}px)`, // Move horizontally and vertically\n//           position: \"absolute\", // Ensure it's positioned absolutely within the screen\n//         }}\n//         className=\"w-[700px] h-auto\"\n//       />\n\n//       {/* Down arrow */}\n//       <div className=\"down-arrow mt-64 style={{ position: 'absolute', bottom: '5px' }\">\n//         <FontAwesomeIcon icon={faChevronDown} size=\"3x\" color=\"#090704\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Hero;\n\n\n//moving animation hero\n// import React, { useEffect, useState } from \"react\";\n// import MyImage from \"./assets/images/saillogo.png\"; // Your sailboat image\n// import ArrowImage from \"./assets/images/arrow.png\"; // Arrow image for desktop\n// import DragImage from \"./assets/images/drag.png\"; // Drag icon for mobile\n\n// const Hero = () => {\n//   const [position, setPosition] = useState({ x: 0, y: 300 });\n//   const [touchStart, setTouchStart] = useState({ x: 0, y: 0 });\n//   const [isMobile, setIsMobile] = useState(false); // Track if the device is mobile\n//   const [isMoving, setIsMoving] = useState(false); // Track if the image is moving\n\n//   // Check if the device is mobile\n//   useEffect(() => {\n//     const checkMobile = () => {\n//       setIsMobile(window.innerWidth <= 768); // You can adjust the breakpoint based on your needs\n//     };\n\n//     // Check on load\n//     checkMobile();\n\n//     // Add resize listener to detect device switch\n//     window.addEventListener(\"resize\", checkMobile);\n\n//     return () => window.removeEventListener(\"resize\", checkMobile); // Cleanup on unmount\n//   }, []);\n\n//   // Handle keydown events for arrow keys (Desktop)\n//   const handleKeyDown = (event) => {\n//     const step = 10; // Distance moved per key press\n//     let newPosition = { ...position };\n\n//     switch (event.key) {\n//       case \"ArrowUp\":\n//         newPosition.y -= step;\n//         break;\n//       case \"ArrowDown\":\n//         newPosition.y += step;\n//         break;\n//       case \"ArrowLeft\":\n//         newPosition.x -= step;\n//         break;\n//       case \"ArrowRight\":\n//         newPosition.x += step;\n//         break;\n//       default:\n//         break;\n//     }\n\n//     setPosition(newPosition);\n//     setIsMoving(true); // Mark as moving when key is pressed\n//   };\n\n//   // Handle touch events for mobile (swiping)\n//   const handleTouchStart = (e) => {\n//     const touchStartX = e.touches[0].clientX;\n//     const touchStartY = e.touches[0].clientY;\n//     setTouchStart({ x: touchStartX, y: touchStartY });\n//   };\n\n//   const handleTouchMove = (e) => {\n//     if (!touchStart.x || !touchStart.y) return; // Ignore if no touch start position\n\n//     const touchEndX = e.touches[0].clientX;\n//     const touchEndY = e.touches[0].clientY;\n\n//     const deltaX = touchEndX - touchStart.x;\n//     const deltaY = touchEndY - touchStart.y;\n\n//     let newPosition = { ...position };\n\n//     // Move the boat based on the touch swipe distance\n//     newPosition.x += deltaX / 10; // Divide by a factor to control the speed of movement\n//     newPosition.y += deltaY / 10;\n\n//     setPosition(newPosition);\n//     setTouchStart({ x: touchEndX, y: touchEndY }); // Update touch start for next movement\n//     setIsMoving(true); // Mark as moving when touch is moved\n//   };\n\n//   const handleTouchEnd = () => {\n//     setTouchStart({ x: 0, y: 0 }); // Reset touch position when touch ends\n//   };\n\n//   // Attach and clean up keydown event listener\n//   useEffect(() => {\n//     window.addEventListener(\"keydown\", handleKeyDown);\n\n//     // Cleanup when component unmounts\n//     return () => {\n//       window.removeEventListener(\"keydown\", handleKeyDown);\n//     };\n//   }, [position]); // Only re-run when position changes\n\n//   // Attach and clean up touch event listeners for mobile\n//   useEffect(() => {\n//     window.addEventListener(\"touchstart\", handleTouchStart);\n//     window.addEventListener(\"touchmove\", handleTouchMove);\n//     window.addEventListener(\"touchend\", handleTouchEnd);\n\n//     // Cleanup when component unmounts\n//     return () => {\n//       window.removeEventListener(\"touchstart\", handleTouchStart);\n//       window.removeEventListener(\"touchmove\", handleTouchMove);\n//       window.removeEventListener(\"touchend\", handleTouchEnd);\n//     };\n//   }, [position, touchStart]);\n\n//   return (\n//     <div className=\"hero text-[#090704] p-0 m-0 h-screen w-full text-center flex flex-col justify-center items-center bg-[#f7f7f7] relative\">\n//       {/* Title */}\n//       <h1 className=\"text-7xl font-bold text-[#090704] mt-12 mb-16 tracking-wide z-20\">\n//         DAPHNE WU\n//       </h1>\n\n//       {/* Instruction Message for Mobile */}\n//       <p\n//         className=\"instruction-message text-[#090704] font-medium text-lg z-20\"\n//         style={{\n//           position: \"absolute\",\n//           top: \"50%\", // Position it near the center of the screen\n//           left: \"50%\",\n//           transform: \"translate(-50%, -50%)\",\n//           padding: \"10px\",\n//           backgroundColor: \"#f7f7f7\",\n//           borderRadius: \"5px\",\n//           visibility: (isMobile && !isMoving) ? \"visible\" : \"hidden\", // Show only on mobile and if not moving\n//         }}\n//       >\n//         Drag the sailboat to move it\n//       </p>\n\n//       {/* Instruction Message for Desktop */}\n//       <p\n//         className=\"instruction-message text-[#090704] font-medium text-lg z-20\"\n//         style={{\n//           position: \"absolute\",\n//           top: \"50%\",\n//           left: \"50%\",\n//           transform: \"translate(-50%, 40%)\",\n//           padding: \"10px\",\n//           backgroundColor: \"#f7f7f7\",\n//           borderRadius: \"5px\",\n//           visibility: (!isMobile && !isMoving) ? \"visible\" : \"hidden\", // Show only on desktop and if not moving\n//         }}\n//       >\n//         Use the arrow keys to move the sailboat\n//       </p>\n\n//       {/* Sailboat Image */}\n//       <img\n//         src={MyImage}\n//         alt=\"Sailboat\"\n//         style={{\n//           position: \"absolute\",\n//           left: `${position.x}px`,\n//           top: `${position.y}px`,\n//           width: \"200px\",\n//           height: \"auto\",\n//           zIndex: 10,\n//         }}\n//       />\n\n//       {/* Arrow or Drag Image */}\n//       <img\n//         src={isMobile ? DragImage : ArrowImage} // Show drag icon for mobile, arrow for desktop\n//         alt=\"Move icon\"\n//         style={{\n//           position: \"absolute\",\n//           left: `${position.x + 220}px`, // Position next to the sailboat\n//           top: `${position.y + 50}px`, // Position vertically aligned with the sailboat\n//           width: \"50px\", // Size of the move icon\n//           height: \"auto\",\n//           zIndex: 20,\n//           visibility: isMoving ? \"hidden\" : \"visible\", // Hide when the image starts moving\n//         }}\n//       />\n\n//       {/* Optional: Down Arrow */}\n//       <div\n//         className=\"down-arrow\"\n//         style={{\n//           position: \"absolute\",\n//           bottom: \"10px\",\n//           left: \"50%\",\n//           transform: \"translateX(-50%)\",\n//           color: \"#090704\", // Customize the arrow color\n//           fontSize: \"2rem\", // Adjust the size of the arrow\n//         }}\n//       >\n//         ↓\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Hero;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,oBACED,OAAA;IACEE,SAAS,EAAC,kIAAkI;IAAAC,QAAA,gBAG5IH,OAAA;MAAKE,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCH,OAAA;QAAIE,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLP,OAAA;QAAIE,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGNP,OAAA;MAAKE,SAAS,EAAC,6DAA6D;MAAAC,QAAA,gBAC1EH,OAAA;QAAGE,SAAS,EAAC,mDAAmD;QAAAC,QAAA,EAAC;MAEjE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJP,OAAA;QAAQE,SAAS,EAAC,kGAAkG;QAAAC,QAAA,EAAC;MAErH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA3BIP,WAAW;AA6BjB,eAAeA,WAAW;;AAM1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}