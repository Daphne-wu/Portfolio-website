{"ast":null,"code":"var _jsxFileName = \"/Users/daphnewu/Desktop/Projects/portfolio/src/components/Hero.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport MyImage from \"./assets/images/saillogo.png\"; // Adjust the path based on where the image is located\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const imageWidth = 700;\n  const [position, setPosition] = useState(-imageWidth); // Start off-screen to the left\n  const [isVisible, setIsVisible] = useState(false); // Track visibility of the section\n  const heroRef = useRef(null); // Reference to the Hero section\n\n  useEffect(() => {\n    let animationFrameId;\n\n    // Function to animate the image across the screen\n    const animate = () => {\n      setPosition(prev => prev >= window.innerWidth ? -imageWidth : prev + 2 // Reset to the left after leaving the screen\n      );\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    // Start animation\n    animate();\n\n    // Cleanup on component unmount\n    return () => cancelAnimationFrame(animationFrameId);\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      if (heroRef.current) {\n        const rect = heroRef.current.getBoundingClientRect();\n        // Check if the section is in the viewport\n        setIsVisible(rect.top >= 0 && rect.bottom <= window.innerHeight);\n      }\n    };\n\n    // Add scroll event listener\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // Initial check\n    handleScroll();\n\n    // Cleanup event listener\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // Bobbing effect based on position\n  const bobPosition = Math.sin(position * 0.05) * 20; // Vertical bobbing\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: heroRef,\n    className: \"hero text-[#090704] p-0 m-0 h-screen w-full text-center flex flex-col justify-center items-center bg-[#f7f7f7] overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-6xl font-bold text-[#090704] mt-12 mb-16 tracking-wide\",\n      children: \"DAPHNE WU\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: MyImage,\n      alt: \"Sail Logo\",\n      style: {\n        transform: `translateX(${position}px) translateY(${bobPosition}px)`,\n        // Move horizontally and vertically\n        position: \"absolute\" // Ensure it's positioned absolutely within the screen\n      },\n      className: \"w-[700px] h-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"agb2GfbLFBfaREOBrP245ycsp3I=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MyImage","jsxDEV","_jsxDEV","Hero","_s","imageWidth","position","setPosition","isVisible","setIsVisible","heroRef","animationFrameId","animate","prev","window","innerWidth","requestAnimationFrame","cancelAnimationFrame","handleScroll","current","rect","getBoundingClientRect","top","bottom","innerHeight","addEventListener","removeEventListener","bobPosition","Math","sin","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","transform","_c","$RefreshReg$"],"sources":["/Users/daphnewu/Desktop/Projects/portfolio/src/components/Hero.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport MyImage from \"./assets/images/saillogo.png\"; // Adjust the path based on where the image is located\n\nconst Hero = () => {\n  const imageWidth = 700;\n  const [position, setPosition] = useState(-imageWidth); // Start off-screen to the left\n  const [isVisible, setIsVisible] = useState(false); // Track visibility of the section\n  const heroRef = useRef(null); // Reference to the Hero section\n\n  useEffect(() => {\n    let animationFrameId;\n\n    // Function to animate the image across the screen\n    const animate = () => {\n      setPosition((prev) =>\n        prev >= window.innerWidth ? -imageWidth : prev + 2 // Reset to the left after leaving the screen\n      );\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    // Start animation\n    animate();\n\n    // Cleanup on component unmount\n    return () => cancelAnimationFrame(animationFrameId);\n  }, []);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (heroRef.current) {\n        const rect = heroRef.current.getBoundingClientRect();\n        // Check if the section is in the viewport\n        setIsVisible(rect.top >= 0 && rect.bottom <= window.innerHeight);\n      }\n    };\n\n    // Add scroll event listener\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // Initial check\n    handleScroll();\n\n    // Cleanup event listener\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // Bobbing effect based on position\n  const bobPosition = Math.sin(position * 0.05) * 20; // Vertical bobbing\n\n  return (\n    <div\n      ref={heroRef}\n      className=\"hero text-[#090704] p-0 m-0 h-screen w-full text-center flex flex-col justify-center items-center bg-[#f7f7f7] overflow-hidden\"\n    >\n      {/* Title */}\n      <h1 className=\"text-6xl font-bold text-[#090704] mt-12 mb-16 tracking-wide\">\n        DAPHNE WU\n      </h1>\n\n      {/* Conditionally render the image */}\n      {isVisible && (\n        <img\n          src={MyImage}\n          alt=\"Sail Logo\"\n          style={{\n            transform: `translateX(${position}px) translateY(${bobPosition}px)`, // Move horizontally and vertically\n            position: \"absolute\", // Ensure it's positioned absolutely within the screen\n          }}\n          className=\"w-[700px] h-auto\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Hero;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,UAAU,GAAG,GAAG;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAACO,UAAU,CAAC,CAAC,CAAC;EACvD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAMY,OAAO,GAAGX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAIc,gBAAgB;;IAEpB;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBL,WAAW,CAAEM,IAAI,IACfA,IAAI,IAAIC,MAAM,CAACC,UAAU,GAAG,CAACV,UAAU,GAAGQ,IAAI,GAAG,CAAC,CAAC;MACrD,CAAC;MACDF,gBAAgB,GAAGK,qBAAqB,CAACJ,OAAO,CAAC;IACnD,CAAC;;IAED;IACAA,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAMK,oBAAoB,CAACN,gBAAgB,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,MAAMqB,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIR,OAAO,CAACS,OAAO,EAAE;QACnB,MAAMC,IAAI,GAAGV,OAAO,CAACS,OAAO,CAACE,qBAAqB,CAAC,CAAC;QACpD;QACAZ,YAAY,CAACW,IAAI,CAACE,GAAG,IAAI,CAAC,IAAIF,IAAI,CAACG,MAAM,IAAIT,MAAM,CAACU,WAAW,CAAC;MAClE;IACF,CAAC;;IAED;IACAV,MAAM,CAACW,gBAAgB,CAAC,QAAQ,EAAEP,YAAY,CAAC;;IAE/C;IACAA,YAAY,CAAC,CAAC;;IAEd;IACA,OAAO,MAAMJ,MAAM,CAACY,mBAAmB,CAAC,QAAQ,EAAER,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACvB,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;;EAEpD,oBACEJ,OAAA;IACE4B,GAAG,EAAEpB,OAAQ;IACbqB,SAAS,EAAC,gIAAgI;IAAAC,QAAA,gBAG1I9B,OAAA;MAAI6B,SAAS,EAAC,6DAA6D;MAAAC,QAAA,EAAC;IAE5E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGJ5B,SAAS,iBACRN,OAAA;MACEmC,GAAG,EAAErC,OAAQ;MACbsC,GAAG,EAAC,WAAW;MACfC,KAAK,EAAE;QACLC,SAAS,EAAE,cAAclC,QAAQ,kBAAkBqB,WAAW,KAAK;QAAE;QACrErB,QAAQ,EAAE,UAAU,CAAE;MACxB,CAAE;MACFyB,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtEID,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAwEV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}