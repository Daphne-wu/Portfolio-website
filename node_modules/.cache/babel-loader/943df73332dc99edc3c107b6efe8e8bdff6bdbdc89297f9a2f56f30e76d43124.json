{"ast":null,"code":"var _jsxFileName = \"/Users/daphnewu/Desktop/Projects/portfolio/src/components/Cursor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '/Users/daphnewu/Desktop/Projects/portfolio/src/components/styles/Cursor.css'; // Make sure to create the CSS file for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cursor = () => {\n  _s();\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [hoveredTextIndex, setHoveredTextIndex] = useState(null);\n  useEffect(() => {\n    // Track mouse position\n    const updateMousePosition = e => {\n      setMousePosition({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n\n    // Add mousemove event listener\n    document.addEventListener('mousemove', updateMousePosition);\n    return () => {\n      // Clean up the event listener\n      document.removeEventListener('mousemove', updateMousePosition);\n    };\n  }, []);\n\n  // Function to calculate which part of the text is under the cursor\n  const getTextUnderCursor = e => {\n    const textElement = e.target;\n    const cursorRadius = 50; // Adjust the radius of the spotlight\n    const rect = textElement.getBoundingClientRect();\n\n    // Calculate the position of the cursor relative to the text\n    const distanceX = Math.abs(e.clientX - rect.left);\n    const distanceY = Math.abs(e.clientY - rect.top);\n\n    // Check if the cursor is within the spotlight area\n    if (distanceX <= cursorRadius && distanceY <= cursorRadius) {\n      return true; // Cursor is within the text's range\n    }\n    return false; // Cursor is outside the text's range\n  };\n\n  // Handle text hover effect (text will react to cursor)\n  const handleMouseEnterText = e => {\n    const isCursorOverText = getTextUnderCursor(e);\n    if (isCursorOverText) {\n      setHoveredTextIndex(e.target.innerText); // Store the text element under cursor\n    }\n  };\n  const handleMouseLeaveText = () => {\n    setHoveredTextIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-cursor\",\n      style: {\n        left: `${mousePosition.x}px`,\n        top: `${mousePosition.y}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-hover-example\",\n      onMouseEnter: handleMouseEnterText,\n      onMouseLeave: handleMouseLeaveText,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: `Hover over part of this text!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Cursor, \"hLU/UNPl4OGaiifsEZYUyOFPTV0=\");\n_c = Cursor;\nexport default Cursor;\nvar _c;\n$RefreshReg$(_c, \"Cursor\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Cursor","_s","mousePosition","setMousePosition","x","y","hoveredTextIndex","setHoveredTextIndex","updateMousePosition","e","clientX","clientY","document","addEventListener","removeEventListener","getTextUnderCursor","textElement","target","cursorRadius","rect","getBoundingClientRect","distanceX","Math","abs","left","distanceY","top","handleMouseEnterText","isCursorOverText","innerText","handleMouseLeaveText","children","className","style","fileName","_jsxFileName","lineNumber","columnNumber","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["/Users/daphnewu/Desktop/Projects/portfolio/src/components/Cursor.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '/Users/daphnewu/Desktop/Projects/portfolio/src/components/styles/Cursor.css'; // Make sure to create the CSS file for styling\n\nconst Cursor = () => {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [hoveredTextIndex, setHoveredTextIndex] = useState(null);\n\n  useEffect(() => {\n    // Track mouse position\n    const updateMousePosition = (e) => {\n      setMousePosition({ x: e.clientX, y: e.clientY });\n    };\n\n    // Add mousemove event listener\n    document.addEventListener('mousemove', updateMousePosition);\n\n    return () => {\n      // Clean up the event listener\n      document.removeEventListener('mousemove', updateMousePosition);\n    };\n  }, []);\n\n  // Function to calculate which part of the text is under the cursor\n  const getTextUnderCursor = (e) => {\n    const textElement = e.target;\n    const cursorRadius = 50; // Adjust the radius of the spotlight\n    const rect = textElement.getBoundingClientRect();\n    \n    // Calculate the position of the cursor relative to the text\n    const distanceX = Math.abs(e.clientX - rect.left);\n    const distanceY = Math.abs(e.clientY - rect.top);\n\n    // Check if the cursor is within the spotlight area\n    if (distanceX <= cursorRadius && distanceY <= cursorRadius) {\n      return true; // Cursor is within the text's range\n    }\n    return false; // Cursor is outside the text's range\n  };\n\n  // Handle text hover effect (text will react to cursor)\n  const handleMouseEnterText = (e) => {\n    const isCursorOverText = getTextUnderCursor(e);\n    if (isCursorOverText) {\n      setHoveredTextIndex(e.target.innerText);  // Store the text element under cursor\n    }\n  };\n\n  const handleMouseLeaveText = () => {\n    setHoveredTextIndex(null);\n  };\n\n  return (\n    <>\n      {/* Custom Cursor */}\n      <div\n        className=\"custom-cursor\"\n        style={{\n          left: `${mousePosition.x}px`,\n          top: `${mousePosition.y}px`,\n        }}\n      ></div>\n\n      {/* Example Text */}\n      <div\n        className=\"text-hover-example\"\n        onMouseEnter={handleMouseEnterText}\n        onMouseLeave={handleMouseLeaveText}\n      >\n        <h1>{`Hover over part of this text!`}</h1>\n      </div>\n    </>\n  );\n};\n\nexport default Cursor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}